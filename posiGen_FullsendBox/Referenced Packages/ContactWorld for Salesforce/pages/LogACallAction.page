<apex:page id="logACallPage" controller="NVMContactWorld.LogACallActionController" action="{!init}">

    <apex:stylesheet value="{!URLFOR($Resource.NVMContactWorld__Assets, 'assets/Styles-NVM.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.NVMContactWorld__Assets, 'assets/jquery-1.7.1.min.js')}" />
    <apex:includeScript value="/canvas/sdk/js/publisher.js" />


    <apex:form id="logACallForm">
        <apex:actionFunction name="refresh"
            action="{!init}"
            reRender="logACallContainer"
            oncomplete="initUI()"/>
        <apex:actionFunction name="saveFreshDataAndRefresh"
            action="{!saveFreshDataAndRefresh}"
            reRender="logACallContainer"
            oncomplete="refreshFeed();initUI()"/>
        <apex:actionFunction name="refreshStaleData"
            action="{!refreshStaleData}"
            reRender="logACallContainer"
            oncomplete="initUI()" />

        <apex:outputPanel id="logACallContainer" layout="block" >
            <div id="NvmPublisherAction">
                <apex:outputPanel layout="none" rendered="{!IsRenderingNoActiveCallMessage}">
                    <p id="noActiveCallMsg">{!$Label.nvmcontactworld__NoActiveCallMessage}</p>
                    <apex:commandButton action="{!init}" value="{!$Label.nvmcontactworld__RefreshButton}" id="btnRefresh"/>
                </apex:outputPanel>

                <apex:outputPanel layout="none" rendered="{!IsRenderingNotesPanel}">
                    <apex:outputPanel rendered="{!ErrorMessage != null}">
                        <div id="logACallError" class="errorMsg">
                            <strong>{!ErrorMessage}</strong>
                            <a class="boxclose"></a>
                        </div>
                    </apex:outputPanel>

                    <apex:outputPanel layout="none" rendered="{!HasCustomFields == false}">
                        <div class="quickActionFieldLabel">
                          <label>{!$Label.nvmcontactworld__NotesLabel}</label>
                        </div>

                        <div class="quickActionFieldElement">
                          <apex:inputTextarea id="notesField" html-placeholder="{!$Label.nvmcontactworld__NotesPlaceholder}" value="{!CallNote}" rows="{!CallNoteRows}" styleClass="notesField" html-autofocus="autofocus"/>
                        </div>
                    </apex:outputPanel>

                    <apex:panelGrid columns="2" styleClass="fieldsGrid" columnClasses="additionalFieldsColumn, notesColumn" rendered="{!HasCustomFields}">
                        <apex:pageblock id="additionalFieldsPageBlock" mode="maindetail">
                            <apex:pageBlockSection showHeader="false" columns="1">
                                <apex:repeat value="{!CustomFieldNames}" var="customFieldName">
                                    <apex:inputField value="{!CustomFieldsTask[customFieldName]}" styleClass="additionalField"/>
                                </apex:repeat>
                            </apex:pageBlockSection>
                        </apex:pageblock>

                        <apex:outputPanel layout="none">
                            <div class="quickActionFieldLabel">
                              <label>{!$Label.nvmcontactworld__NotesLabel}</label>
                            </div>
                            <div class="quickActionFieldElement">
                              <apex:inputTextarea id="notesField2" html-placeholder="{!$Label.nvmcontactworld__NotesPlaceholder}" value="{!CallNote}" rows="{!CallNoteRows}" styleClass="notesField" html-autofocus="autofocus"/>
                            </div>
                        </apex:outputPanel>
                    </apex:panelGrid>

                    <apex:outputPanel id="whoAndWhat" layout="block" rendered="{!LinkingToMultipleObjectsEnabled}">
                        <div class="quickActionFieldLabel">
                          <label>{!$Label.nvmcontactworld__Name}</label>
                        </div>
                        <div class="quickActionFieldLabel">
                          <label>{!$Label.nvmcontactworld__RelatedTo}</label>
                        </div>

                        <div class="quickActionFieldLabel">
                            <apex:inputField value="{!CustomFieldsTask.WhoId}" styleClass="lookupSection"/>
                        </div>
                        <div class="quickActionFieldLabel">
                            <apex:inputField value="{!CustomFieldsTask.WhatId}" styleClass="lookupSection"/>
                        </div>
                    </apex:outputPanel>

                    <div class="quickActionBottomBar">
                        <apex:commandButton id="linkCallBtn" value="{!LinkToVisibleObjectLabel}" action="{!linkEventToVisibleObject}" rendered="{!IsRenderingLinkCallButton}" reRender="logACallContainer"/>
                        <apex:commandButton id="saveNoteBtn" action="{!saveNote}" reRender="logACallContainer" value="{!$Label.nvmcontactworld__SaveButton}" styleClass="mainAction" oncomplete="refreshFeed();initUI()" onclick="disableSaveNoteButton();"/>
                    </div>
                </apex:outputPanel>
            </div>

            <script type="text/javascript">
                // this block must be included inside the outputPanel tag so that the IsCallActive expression is re-evaluated when the LogACall container is rerendered
                function disableWhoAndWhatButtons() {
                    if ({!IsCallActive == false}) {
                        $("div[id$='whoAndWhat'] div input, div[id$='whoAndWhat'] div select").prop('disabled', true);
                        $("div[id$='whoAndWhat'] div a").hide();
                    }
                }
            </script>
        </apex:outputPanel>
    </apex:form>

    <script type="text/javascript">
        (function refreshStaleDataOnBrowserTabBecomingVisible() {
            var hidden = "hidden";
            if (hidden in document)
                document.addEventListener("visibilitychange", onchange);
            else if ((hidden = "mozHidden") in document)
                document.addEventListener("mozvisibilitychange", onchange);
            else if ((hidden = "webkitHidden") in document)
                document.addEventListener("webkitvisibilitychange", onchange);
            else if ((hidden = "msHidden") in document)
                document.addEventListener("msvisibilitychange", onchange);

            function onchange () {
                var isVisible = !this[hidden];

                if (isVisible) {
                    refreshStaleData();
                }
            }
        })();

        $(function(){
            Sfdc.canvas.publisher.subscribe([{name : "publisher.customActionMessage", onData : function(e) {
                if (e.message === 'Call_Start_Event') {
                    refresh();
                } else if (e.message === 'Call_End_Event') {
                    saveFreshDataAndRefresh();
                } else if (e.message === 'Console_Tab_Change_Event'){
                    refreshStaleData();
                }
            }}]);

            initUI();
        });

        function initUI() {
            disableWhoAndWhatButtons();
            hideErrorOnClick();
        }

        function hideErrorOnClick() {
            $("#logACallError").on('click', function() {
                $(this).hide();
            });
        }

        function disableSaveNoteButton() {
            $(".quickActionBottomBar .mainAction").prop('disabled', true);
        }

        function refreshFeed() {
            if (document.querySelectorAll('.errorMsg').length == 0) {
                Sfdc.canvas.publisher.publish({name : 'publisher.refresh', payload : { feed: true }});
            }
        }

        function setFocusOnLoad() {
            $('textarea')[0].focus();
        };
    </script>

</apex:page>