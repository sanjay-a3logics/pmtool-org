<apex:page controller="GBFree.ManageActionsController" sidebar="false" action="{!init}" title="{!pageTitle}" tabStyle="Grid_Wizard__tab">
<c:EmptyComponent rendered="{!actionsEnabled}">

	<div class="gbActionsPage">
	<apex:outputPanel id="actionErrors">
		<c:EmptyComponent rendered="{!errors.showErrorMessages}" >
			<div class="msgBox warningMsg gbwMsg">
				{!lang.fillInRqrdFieldsError}<br/>
				<apex:repeat value="{!errors.errorMessagesFromMap}" var="error">
					{!error}<br/>
				</apex:repeat>
			</div>
			
			<script type="text/javascript">
				enableButtons();
			</script>
		</c:EmptyComponent>
	</apex:outputPanel>
	
	<apex:outputPanel id="actionInfoMessages">
		<c:EmptyComponent rendered="{!isSuccess && NOT(errors.showErrorMessages)}">
			<div class="msgBox infoMsg gbwMsg">			
				<apex:repeat value="{!apexInfoMessages}" var="success">
					{!success.summary}<br/>
				</apex:repeat>
			</div>
		</c:EmptyComponent>	
	</apex:outputPanel>
	
	<apex:form styleClass="actionForm">
		<apex:pageBlock title="Manage Actions">
			<apex:actionFunction name="validateActions" action="{!validateActions}" rerender="validationResults, actionErrors, actionInfoMessages"/>
			<apex:actionFunction name="saveActions" action="{!saveActions}" />
			
			<apex:outputPanel id="validationResults">
				<script type="text/javascript">
					if ({!isValid} == true) {
						// continue with the save
						showSubmitInProgress();
						saveActions();
					}
				</script>
			</apex:outputPanel>
			
			<apex:pageBlockButtons >
				<apex:commandbutton value="{!lang.NewBtnLbl}" onclick="addNewRow(); return false;" id="addRowBtn"/><input 
					type="button" class="btnDisabled none" value="{!lang.NewBtnLbl}" disabled="disabled" />
				<input type="button" value="{!lang.SaveBtnLbl}" class="btn saveActionsBtn" onclick="showSubmitInProgress(); saveNewRows(); validateActions();"/>
				<input type="button" value="{!lang.SaveBtnLbl}" class="btnDisabled none" disabled="disabled"/>
				<apex:commandbutton value="{!lang.DeleteBtnLbl}" action="{!deleteActions}" styleClass="deleteButton"/><input 
					type="button" class="btnDisabled none" value="{!lang.DeleteBtnLbl}" disabled="disabled" />
				<apex:commandbutton value="{!lang.RefreshBtnLbl}" action="{!cancel}"/><input 
					type="button" class="btnDisabled none" value="{!lang.RefreshBtnLbl}" disabled="disabled" />
				<apex:commandButton value="{!lang.ManageGridsLbl}" action="{!goToGW1Page}" styleClass="btn" immediate="true"/><input 
					type="button" class="btnDisabled none" value="{!lang.ManageGridsLbl}" disabled="disabled" />
			</apex:pageBlockButtons>
			<apex:outputText escape="false" value="{!lang.manageActionsPageLevelInstr}"></apex:outputText>
			<table id="actionsTbl" cellspacing="5" cellpadding="0" class="folderBox">
				<tr>
					<td valign="top" class="masterTd">
						<table border="0" cellpadding="4" cellspacing="0" id="actionsList">
							<tr class="gradientHeader gbForm">
								<td>&nbsp;</td>
								<td class="gridProfile-title">{!langMap['actionLabel']}</td>
								<td class="gridProfile-title lastCol" style="width:auto !important;">{!langMap['objectApiName']}<span class="sortasc">&nbsp;</span></td>
							</tr>
							<apex:repeat value="{!actionWrappers}" var="action">    
								<tr id="{!action.meta.id}">
									<td><apex:inputCheckbox styleClass="deleteChk" value="{!action.isDeleted}"/></td>
									<td class="actionInfoUnderline">{!action.attrMap['actionLabel']}</td>
									<td class="objectInfo lastCol">{!action.attrMap['objDisplName']}</td>
								</tr>
							</apex:repeat>
						</table>
					</td>
					<td valign="top" class="masterTd">
						<table border="0" cellpadding="4" cellspacing="0" id="actionDetails">
							<tr class="gradientHeader">
								<td class="gridProfile-title lastCol" colspan="2">Details</td>
							</tr>
							<tr id="infoText">
								<td><i>{!lang.manageActionsInstr}</i></td>
 							</tr>
 							<apex:repeat value="{!actionWrappers}" var="action">    
								<tr id="{!action.meta.id}details" style="display: none;" class="actionRow">
									<td>
										<table>
											<tr>
												<td class="fieldName" title="{!lang.actionNameFieldHelp}">{!langMap['actionLabel']}<span class="star">*</span></td>
												<td class="actionTitle"><apex:inputText styleClass="actionTitleInput" maxlength="100" value="{!action.attrMap['actionLabel']}"/></td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.descrFieldHelp}">{!langMap['descr']}</td>
												<td><apex:inputText value="{!action.attrMap['descr']}" maxlength="255"/></td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.objectFieldHelp}">{!langMap['objectApiName']}<span class="star">*</span></td>
												<td class="objectPickList" name="{!action.attrMap['objectApiName']}">
													<apex:inputHidden id="obj" value="{!action.attrMap['objectApiName']}"/>
												</td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.actionTypeFieldHelp}">{!langMap['actionType']}<span class="star">*</span></td>	
												<td class="actionTypePickList">
													<apex:selectList size="1" value="{!action.attrMap['actionType']}" styleClass="actionTypeSelect">
														<apex:selectOptions value="{!actionType}" />
													</apex:selectList>
												</td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.actionLocationFieldHelp}">{!langMap['actionLocation']}<span class="star">*</span></td>	
												<td class="actionLocationPickList">
													<apex:selectList size="1" value="{!action.attrMap['actionLocation']}" styleClass="actionLocationSelect">
														<apex:selectOptions value="{!actionLocation}" />
													</apex:selectList>
												</td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.execBehaviorFieldHelp}">{!langMap['displayBehavior']}<span class="star">*</span></td>
												<td class="execBehaviorPickList">
													<apex:selectList size="1" value="{!action.attrMap['displayBehavior']}" styleClass="execBehaviorSelect">
														<apex:selectOptions value="{!displayBehavior}" />
													</apex:selectList>
												</td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.contentSourceFieldHelp}">{!langMap['contentSource']}<span class="star">*</span></td>
												<td class="contentSourcePickList">
													<apex:selectList size="1" value="{!action.attrMap['contentSource']}" styleClass="contentSourceSelect">
														<apex:selectOptions value="{!contentSource}" />
													</apex:selectList>
												</td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.contentFieldHelp}">{!langMap['content']}<span class="star">*</span></td>
												<td><apex:inputText value="{!action.attrMap['content']}" maxlength="2000"/></td>
											</tr>
											<tr class="idParamRow">
												<td class="fieldName" title="{!lang.idParamFieldHelp}">{!langMap['idParamName']}<span class="star">*</span></td>
												<td><apex:inputText value="{!action.attrMap['idParamName']}" maxlength="150"/></td>
											</tr>
											<tr>
												<td class="fieldName" title="{!lang.confirmActionFieldHelp}">{!langMap['confirmAction']}</td>
												<td><apex:inputCheckbox style="margin:0;" styleClass="confirmAction" value="{!action.attrMap['confirmAction']}"/></td>
											</tr>
											<tr class="confirmMessageRow">
												<td class="fieldName" title="{!lang.confirmMessageFieldHelp}">{!langMap['confirmMessage']}</td>
												<td><apex:inputText styleClass="confirmMessage" value="{!action.attrMap['confirmMessage']}" maxlength="255"/></td>
											</tr>
										</table>
									</td>
 								</tr>
							</apex:repeat>
						</table>
					</td>
				</tr>
			</table>
			
			<apex:inputHidden value="{!newActionsJson}" id="newActionsJson"/>
			
		</apex:pageBlock>
	</apex:form>

	<apex:repeat value="{!CSSFileNames}" var="fName">
		<apex:stylesheet value="{!URLFOR($Resource.GBFree__gb_resources, fName)}"/>
	</apex:repeat>
	
	<div class="gbCopyright">{!lang.CopyrightTxt}</div>
	</div><!-- end gbActionsPage -->
	
	<!-- note: this must come before the JS includes because the actions js depends on these being present onload -->
	<script type="text/javascript">
		// Content Source Picklist ( the values are used on the create new action form)
		var contentSources = {!contentSourceJson};
		
		// Action Type Picklist
		var actionTypes = {!actionTypeJson};
		
		// Action Type Picklist
		var actionLocations = {!actionLocationJson};
		
		// Execution Behavior Picklist
		var execBehaviors = {!displayBehaviorJson};
		
		// Objects drop down
		var objectNames = {!objectsJson};
		
		// labels
		var actionsLang = {
			defaultSelectObject: "{!lang.defaultSelectObject}",
			actionNameFieldHelp: "{!lang.actionNameFieldHelp}",
			objectFieldHelp: "{!lang.objectFieldHelp}",
			descrFieldHelp: "{!lang.descrFieldHelp}",
			actionTypeFieldHelp: "{!lang.actionTypeFieldHelp}",
			actionLocationFieldHelp :  "{!lang.actionLocationFieldHelp}",
			execBehaviorFieldHelp: "{!lang.execBehaviorFieldHelp}",
			contentSourceFieldHelp: "{!lang.contentSourceFieldHelp}",
			contentFieldHelp: "{!lang.contentFieldHelp}",
			idParamFieldHelp: '{!JSENCODE(lang.idParamFieldHelp)}',
			confirmActionFieldHelp: '{!lang.confirmActionFieldHelp}',
			confirmMessageFieldHelp: '{!JSENCODE(lang.confirmMessageFieldHelp)}',
			unknownLabel: "{!lang.unknownLabel}",
			deleteActionsWarning: "{!lang.deleteActionsWarning}",
			changeObjectWarning: "{!lang.changeObjectWarning}",
			noActionsToDeleteError: "{!lang.noActionsToDeleteError}",
			contentInlineHelp: {
				composer: "{!lang.contentInlineHelpComposer}",
				conductor: "{!lang.contentInlineHelpConductor}",
				button: "{!lang.contentInlineHelpButton}",
				formula: "{!lang.contentInlineHelpFormula}",
				url: "{!lang.contentInlineHelpURL}",
				page: "<apex:outputText value="{!lang.contentInlineHelpPage}" escape="false" />",
				grid: "<apex:outputText value="{!lang.contentInlineHelpGrid}" escape="false" />"
			},
			idInlinHelp: {
				grid: "{!lang.idInlineHelpTextGrid}",
				"default": "{!lang.idInlineHelpTextDefault}"
			}
		};
	</script>
	
	<apex:repeat value="{!JSFileNames}" var="fName">
		<script type="text/javascript" src="{!URLFOR($Resource.GBFree__gb_resources, fName)}"></script>
	</apex:repeat>
	
	<!-- note: this must come after the JS includes because of the jquery dependency -->
	<script type="text/javascript">
		// add the langMap properties
		jq.extend(actionsLang, {!langMapJSON});
	</script>
</c:EmptyComponent>
</apex:page>